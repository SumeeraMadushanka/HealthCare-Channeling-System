{"ast":null,"code":"var _jsxFileName = \"C:\\\\vscode\\\\HealthCare Channeling System\\\\BACKEND\\\\frontend\\\\src\\\\components\\\\pages\\\\payment\\\\test.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class CreateSession extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({ ...this.state,\n        [name]: value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      let errors = this.validateAll();\n\n      if (this.isValid(errors)) {\n        const {\n          SessionName,\n          SessionDate,\n          Availability\n        } = this.state;\n        const data = {\n          SessionName: SessionName,\n          SessionDate: SessionDate,\n          Availability: Availability\n        };\n        console.log(data);\n        axios.post(\"/post/save\", data).then(res => {\n          if (res.data.success) {\n            alert(\"Session Added Successfully\");\n            this.setState({\n              SessionName: \"\",\n              SessionDate: \"\",\n              Availability: \"\"\n            });\n          }\n        });\n      } else {\n        let s1 = { ...this.state\n        };\n        s1.errors = errors;\n        this.setState(s1);\n      }\n    };\n\n    this.isValid = errors => {\n      //errors would have keys with non empty string as values\n      let keys = Object.keys(errors); //keys in an array\n\n      let count = keys.reduce((acc, curr) => errors[curr] ? acc + 1 : acc, 0);\n      return count === 0;\n    };\n\n    this.validateAll = e => {\n      let {\n        SessionName,\n        SessionDate,\n        Availability\n      } = this.state;\n      let errors = {};\n      errors.SessionName = this.validateSessionName(SessionName);\n      errors.SessionDate = this.validateSessionDate(SessionDate);\n      errors.Availability = this.validateAvailability(Availability);\n      return errors;\n    };\n\n    this.validateSessionName = SessionName => !SessionName ? \"SessionName is Required\" : SessionName.length < 5 ? \"SessionName should have minimum 5 characters\" : \"\";\n\n    this.validateSessionDate = SessionDate => !SessionDate ? \"SessionDate is Required\" : \"\";\n\n    this.validateAvailability = Availability => !Availability ? \"Availability is Required\" : \"\";\n\n    this.state = {\n      errors: {},\n      SessionName: \"\",\n      SessionDate: \"\",\n      Availability: \"\"\n    };\n  }\n\n  render() {\n    let {\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/appointmentSession\",\n            style: {\n              textDecoration: 'none'\n            },\n            children: \"All Appointment Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8 mt-4 mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"h3 mb-3 font-weight-normal\",\n          children: \"Add New Session\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"needs-validation\",\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            style: {\n              marginBottom: '15px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                marginBottom: '5px'\n              },\n              children: \"Session Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"SessionName\",\n              placeholder: \"Enter Session Name\",\n              onChange: this.handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 25\n            }, this), errors.SessionName ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: errors.SessionName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 53\n            }, this) : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            style: {\n              marginBottom: '15px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                marginBottom: '5px'\n              },\n              children: \"Session Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              className: \"form-control\",\n              name: \"SessionDate\",\n              placeholder: \"Enter Session Date\",\n              onChange: this.handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 25\n            }, this), errors.SessionDate ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: errors.SessionDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 53\n            }, this) : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            style: {\n              marginBottom: '15px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                marginBottom: '5px'\n              },\n              children: \"Availability\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"Availability\",\n              placeholder: \"Enter Session Availability\",\n              onChange: this.handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 25\n            }, this), errors.Availability ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: errors.Availability\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 54\n            }, this) : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            type: \"submit\",\n            style: {\n              marginTop: '15px'\n            },\n            onClick: this.onSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"far fa-check-square\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 25\n            }, this), \"\\xA0 Add\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["C:/vscode/HealthCare Channeling System/BACKEND/frontend/src/components/pages/payment/test.js"],"names":["React","Component","axios","CreateSession","constructor","props","handleInputChange","e","name","value","target","setState","state","onSubmit","preventDefault","errors","validateAll","isValid","SessionName","SessionDate","Availability","data","console","log","post","then","res","success","alert","s1","keys","Object","count","reduce","acc","curr","validateSessionName","validateSessionDate","validateAvailability","length","render","textDecoration","marginBottom","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class CreateSession extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            errors: {},\r\n            SessionName:\"\",\r\n            SessionDate:\"\",\r\n            Availability:\"\"\r\n        }\r\n    }\r\n\r\n    handleInputChange = (e) =>{\r\n        const {name,value} = e.target;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            [name]:value\r\n        })\r\n    }\r\n\r\n    onSubmit = (e) =>{\r\n        e.preventDefault();\r\n        let errors = this.validateAll();\r\n        if (this.isValid(errors)){\r\n\r\n        const {SessionName,SessionDate,Availability} = this.state;\r\n\r\n        const data = {\r\n            SessionName:SessionName,\r\n            SessionDate:SessionDate,\r\n            Availability:Availability\r\n        }\r\n    \r\n\r\n        console.log(data)\r\n\r\n        axios.post(\"/post/save\",data).then((res) =>{\r\n            if(res.data.success){\r\n                alert(\"Session Added Successfully\")\r\n                this.setState(\r\n                    {\r\n                        SessionName:\"\",\r\n                        SessionDate:\"\",\r\n                        Availability:\"\"\r\n                    }\r\n                )\r\n            }\r\n        })\r\n    }\r\n    else {\r\n        let s1 = {...this.state};\r\n        s1.errors = errors;\r\n        this.setState(s1);\r\n    }\r\n    };\r\n\r\n    isValid = (errors) => {\r\n        //errors would have keys with non empty string as values\r\n        let keys = Object.keys(errors); //keys in an array\r\n        let count = keys.reduce((acc,curr) => errors[curr] ? acc+1 : acc,0);\r\n        return count === 0;\r\n    };\r\n\r\n    validateAll = (e) => {\r\n        let {SessionName,SessionDate,Availability} = this.state;\r\n        let errors = {};\r\n        errors.SessionName = this.validateSessionName(SessionName);\r\n        errors.SessionDate = this.validateSessionDate(SessionDate);\r\n        errors.Availability = this.validateAvailability(Availability);\r\n\r\n        return errors;\r\n    };\r\n\r\n    validateSessionName = (SessionName) => \r\n        !SessionName \r\n        ? \"SessionName is Required\" \r\n        : SessionName.length<5 \r\n        ? \"SessionName should have minimum 5 characters\" \r\n        : \"\";\r\n\r\n    validateSessionDate = (SessionDate) => \r\n        !SessionDate\r\n        ? \"SessionDate is Required\"\r\n        : \"\";\r\n    \r\n    validateAvailability = (Availability) =>\r\n        !Availability\r\n        ? \"Availability is Required\"\r\n        : \"\";\r\n\r\n    render() {\r\n        let {errors} = this.state;\r\n        return (\r\n            <>\r\n            <center>\r\n            <h4><a href=\"/appointmentSession\" style={{textDecoration:'none'}}>All Appointment Details</a></h4>\r\n            </center>\r\n            <div className=\"col-md-8 mt-4 mx-auto\">\r\n                <h1 className=\"h3 mb-3 font-weight-normal\">Add New Session</h1>\r\n                <form className=\"needs-validation\" noValidate>\r\n                    <div className=\"form-group\" style={{ marginBottom: '15px' }}>\r\n                        <label style={{ marginBottom: '5px' }}>Session Name</label>\r\n                        <input type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"SessionName\"\r\n                            placeholder=\"Enter Session Name\"\r\n                            onChange={this.handleInputChange} />\r\n                            {errors.SessionName ? ( <span className=\"text-danger\">{errors.SessionName}</span>\r\n                            ) : (\r\n                            \"\")}\r\n                    </div>\r\n\r\n                    <div className=\"form-group\" style={{ marginBottom: '15px' }}>\r\n                        <label style={{ marginBottom: '5px' }}>Session Date</label>\r\n                        <input type=\"date\"\r\n                            className=\"form-control\"\r\n                            name=\"SessionDate\"\r\n                            placeholder=\"Enter Session Date\"\r\n                            onChange={this.handleInputChange} />\r\n                            {errors.SessionDate ? ( <span className=\"text-danger\">{errors.SessionDate}</span>\r\n                            ) : (\r\n                            \"\")}\r\n                    </div>\r\n\r\n                    <div className=\"form-group\" style={{ marginBottom: '15px' }}>\r\n                        <label style={{ marginBottom: '5px' }}>Availability</label>\r\n                        <input type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"Availability\"\r\n                            placeholder=\"Enter Session Availability\"\r\n                            onChange={this.handleInputChange} />\r\n                            {errors.Availability ? ( <span className=\"text-danger\">{errors.Availability}</span>\r\n                            ) : (\r\n                            \"\")}\r\n                    </div>\r\n\r\n                    <button className=\"btn btn-success\" type=\"submit\" style={{ marginTop: '15px' }} onClick={this.onSubmit}>\r\n                        <i className=\"far fa-check-square\"></i>\r\n                        &nbsp; Add\r\n                    </button>\r\n\r\n                </form>\r\n            </div></>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}